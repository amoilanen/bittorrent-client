-- Send "announce" to the UDP tracker

-- Initialize the file to be downloaded with all zeros in the local filesystem, once a piece is downloaded update the corresponding file part in the local file system
   -- Keep the metainformation which blocks were already downloaded and which not in a separate file (based on the this file the "bitfield" message should be sent to peers when connecting to them)

-- Download a piece from the peer only if the peer has it according to the bitfield message

-- Support receiving the "keepalive" messages of zero length from peers
-- Respect the "choke" messages from the peer
-- Allow peers to download the blocks of pieces

-- Only a configurable maximum number of peers can be connected at any time at most

-- Once downloading a piece is completed send a "have" message to the peers
-- Receive an interpret "have" messages from the peers
-- Send the "bitfield" message to the peers when connecting to them and when a download of each piece is finished

-- "If both sides don't send the same value, they sever the connection." when doing a handshake with a peer https://www.bittorrent.org/beps/bep_0003.html#peer-messages

-- If no pending blocks are left for a piece and it is not downloaded after a certain timeout then the piece download should be restarted
-- Send "cancel" messages closer to the end of the download https://www.bittorrent.org/beps/bep_0003.html#peer-messages 
-- Support the UDP protocol for the torrent tracker https://www.bittorrent.org/beps/bep_0015.html
-- Show the progress in the console together with the stats
-- Implement upload functionality
-- Be able to download from multiple peers
-- Be able to upload to multiple peers
-- Keep the download and upload rates for peers and reciprocate by unchoking the peers which allow to download "It does reciprocation and number of uploads capping by unchoking the four peers which it has the best download rates from and are interested..." https://www.bittorrent.org/beps/bep_0003.html#peer-messages

-- Reset connection to the peer if receiving an unknown message

-- Support resuming and pausing downloads/uploads

-- Support downloading and uploading multiple torrents at once

-- Periodically re-request peers from the tracker when running a long file download: discover the newly connected peers
-- Send keep alive messages to peers (handle peers dropping the connection) "Keepalives are generally sent once every two minutes, but note that timeouts can be done much more quickly when data is expected."

-- Possible to generate a metainfo file (.torrent file) for a given file or directory and given a tracker
-- Support all the fields including the optional ones from the spec https://www.bittorrent.org/beps/bep_0003.html

-- Test scenario: two peers one of which has first half of the file and the second the second half of the file
-- Test scenario: one of the peers sends intermittent choke/unchoke messages

-- Support sending "scrape" requests to the UDP supporting tracker and parsing its response

-- Implement the DHT protocol support for discovering peers